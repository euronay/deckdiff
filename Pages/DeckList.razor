@page "/decks"
@inject ILogger<DeckList> _logger
@inject ILocalStorage _storage

@if (Decks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="w-full max-w-full mb-4 bg-transparent table-hover">
        <tbody>
            @foreach (var deck in Decks)
            {
                <tr>
                    <td><a class="searchresult-row" href=@($"deck/{deck.Id}")>@deck.Name</a></td>
                </tr>
            }
        </tbody>
    </table>
    <a class="inline-block align-middle text-center select-none border font-normal whitespace-no-wrap py-2 px-4 rounded text-base leading-normal no-underline text-blue-lightest bg-blue hover:bg-blue-light" href=@($"deck/{Guid.NewGuid()}")>New</a>
}

@functions {
    IEnumerable<Deck> Decks;

    protected override async Task OnInitializedAsync()
    {
        var decks = new List<Deck>();
        
        for(var i=0; i< await _storage.Length(); i++)
        {
            var key = await _storage.Key(i);
            _logger.LogDebug($"Found {key} in storage");
            var deckData = await _storage.GetItem<string>(key);
            var deck = JsonConvert.DeserializeObject<Deck>(deckData);
            decks.Add(deck);
        }

        Decks = decks;
    }
}
